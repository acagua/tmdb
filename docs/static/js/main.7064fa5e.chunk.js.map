{"version":3,"sources":["Movies.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","Movie","Poster","img","Title","h2","Date","h4","Movies","props","state","loaded","movies","a","fetch","process","response","json","setState","results","Error","console","log","request","this","map","movie","index","title","src","poster_path","release_date","React","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAGMA,EAAYC,IAAOC,IAAV,6HAQTC,EAAQF,IAAOC,IAAV,4KASLE,EAASH,IAAOI,IAAV,sEAKNC,EAAQL,IAAOM,GAAV,uDAKLC,EAAOP,IAAOQ,GAAV,uEAKGC,EAAb,kDAEI,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,QAAS,EACTC,OAAQ,IAJE,EAFtB,qDAUI,WAAqB,IAAD,QACH,uCAAI,8BAAAC,EAAA,+EAGcC,MAAM,GAAD,OAAIC,gCAAJ,kCAAqEA,mCAArE,eAHnB,cAGHC,EAHG,gBAIUA,EAASC,OAJnB,OAIHA,EAJG,OAKT,EAAKC,SAAS,CAACN,OAAQK,EAAKE,QAASR,QAAO,IALnC,wDAQH,IAAIS,MAAM,YARP,QAWbC,QAAQC,IAAI,EAAKZ,MAAME,QAXV,0DAAJ,qDAebW,KA1BR,kCA8BI,cA9BJ,oBAkCI,WACI,OAAIC,KAAKd,MAAMC,OAKX,cAACb,EAAD,UAEQ0B,KAAKd,MAAME,OAAOa,KAAK,SAACC,EAAOC,GAAR,OACnB,eAAC1B,EAAD,WACI,cAACG,EAAD,UACKsB,EAAME,QAEX,cAAC1B,EAAD,CAAQ2B,IAAG,UAAKd,mCAAL,OAA0CW,EAAMI,eAG3D,eAAC,EAAD,4BACmBJ,EAAMK,kBARjBJ,QAPjB,cAAC7B,EAAD,8BApCnB,GAA4BkC,IAAMC,WCxBnBC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7064fa5e.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n    display:flex;\n    justify-content: center;\n    flex-direction: row;\n    flex-wrap: wrap;\n`;\n\n\nconst Movie = styled.div`\n    background: white;\n    border: 3px solid palevioletred;\n    border-radius: 25px;\n    margin: 20px 20px 20px 20px;\n    flex: 1 0 25%;\n\n`; \n\nconst Poster = styled.img`\n    text-align: center;\n    width: 50%;\n`; \n\nconst Title = styled.h2`\n    text-align: center;\n\n`; \n\nconst Date = styled.h4`\n    text-align: center;\n    color: gray;\n`;\n\nexport class Movies extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            loaded : false,\n            movies: {}\n        }\n    }\n\n    componentDidMount() {\n        const request =  async ()=> {\n            try{\n\n                const response = await fetch(`${process.env.REACT_APP_TMDB_API_BASE_URL}movie/upcoming?api_key=${process.env.REACT_APP_TMDB_API_KEY}&region=FR`);\n                const json = await response.json();\n                this.setState({movies: json.results, loaded:true})\n            }\n            catch (err){\n                throw new Error('se toteo')\n            }\n\n            console.log(this.state.movies)\n            \n        }\n\n        request();\n\n    }\n  \n    componentWillUnmount() {\n\n    }\n  \n    render () {\n        if(!this.state.loaded){\n            return <Container>Cargando...</Container>\n        } \n\n        return (\n            <Container>\n                {\n                    this.state.movies.map( (movie, index) => (\n                        <Movie key={index}>\n                            <Title>\n                                {movie.title}\n                            </Title>\n                            <Poster src={`${process.env.REACT_APP_IMG_BASE_URL}${movie.poster_path}`}>\n\n                            </Poster>\n                            <Date>\n                                Release date: {movie.release_date}\n                            </Date>\n                        </Movie>\n                    )\n\n                    )\n                }\n                \n            </Container>\n        )\n    }\n\n\n\n}","import './App.css';\nimport { Movies } from './Movies';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Movies/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}